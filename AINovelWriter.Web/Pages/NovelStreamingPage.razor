@page "/stream"
@inherits AppComponentBase

<RadzenRow>
	
	<RadzenColumn SizeLG="8" Size="12" Style="overflow:auto">
        <RadzenText TextAlign="TextAlign.Center" TextStyle="TextStyle.Subtitle1" Text="Book"></RadzenText>
        <RadzenButton Text="Re-write" Size="ButtonSize.ExtraSmall" BusyText="Writing" IsBusy="_isBusy" Click="@(async() =>await GenerateNovelAsync())" ></RadzenButton>
		@if (AppState.NovelInfo.IsComplete)
		{
			<RadzenButton class="@_buttonClass" Style="margin-left:35%" Icon="palette" Text="Choose your cover" Click="@(() => NavigationManager.NavigateTo("cover"))"></RadzenButton>
		}
		
		<RadzenCard Style="height:74vh; overflow:auto; position:relative" Variant="Variant.Text">
			
			<BookReader Text="@AppState.NovelInfo.Text"></BookReader>

		</RadzenCard>

		<RadzenButton Disabled="@(_isBusy || string.IsNullOrWhiteSpace(AppState.NovelInfo.Text))" Text="Download" Size="ButtonSize.ExtraSmall" Click="DownloadNovelToFile"></RadzenButton>

		<RadzenButton Text="Cancel" Size="ButtonSize.ExtraSmall" Click="Cancel"></RadzenButton>
		

		<hr />


	</RadzenColumn>
	<RadzenColumn SizeLG="4" Size="0" Style="overflow:auto">
		<RadzenText TextAlign="TextAlign.Center" TextStyle="TextStyle.DisplayH6" Text="Audio"></RadzenText>
		<RadzenText TextAlign="TextAlign.Center" TextStyle="TextStyle.Subtitle1" Text="Select a chapter to listen"></RadzenText>
		@if (AppState.NovelInfo.ChapterOutlines.Count > 0)
		{
			<CascadingValue Name="Title" Value="@AppState.NovelConcepts.Title" TValue="string">
				<RadzenAccordion>
					<Items>
						@foreach (var chapter in AppState.NovelInfo.ChapterOutlines)
						{
							<RadzenAccordionItem Text="@chapter.Title.TrimStart('#')" Style="max-height:15rem; overflow:auto">
								@* <RadzenCard Style="color:black !important">
									@((MarkupString)AsHtml(chapter.Text))

								</RadzenCard> *@
								<RadzenCard Style="padding:0; display:flex; align-items:center; justify-content:center">
									<RadzenButton Size="ButtonSize.ExtraSmall" Disabled="@(string.IsNullOrEmpty(chapter.FullText))" Click="@(() => chapter.ShowAudio = true)" Icon="record_voice_over" Text="Too lazy even to read it"></RadzenButton>
									@if (chapter.ShowAudio)
									{
										var indexString = AppState.NovelInfo.ChapterOutlines.IndexOf(chapter).ToString();
										<BookAudio BookAudioId="@indexString" TextToAudio="@chapter.FullText" Title="@chapter.Title"></BookAudio>
									}
								</RadzenCard>
							</RadzenAccordionItem>
						}
					</Items>
				</RadzenAccordion>
			</CascadingValue>
		}


	</RadzenColumn>
</RadzenRow>